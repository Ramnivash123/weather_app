@page "/"
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Home</PageTitle>

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6" Class="d-flex justify-center">Welcome to Weather App</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent Class="d-flex flex-column align-center">
        <!-- Updated to use @onclick for navigation -->
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="NavigateToSignUp" Class="mb-2">Sign Up</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="NavigateToSignIn">Sign In</MudButton>
    </MudCardContent>
</MudCard>

@code {
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAuthenticated = user.Identity.IsAuthenticated;

        // Redirect if authenticated
        if (isAuthenticated)
        {
            Navigation.NavigateTo("/Weather", forceLoad: true);
        }
    }

    private void NavigateToSignUp()
    {
        Navigation.NavigateTo("/Signup");
    }

    private void NavigateToSignIn()
    {
        Navigation.NavigateTo("/Signin");
    }
}
